#!/bin/bash
# Copyright (C) 2022 Kevin Pham
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source=$1

# Passed in from concourse via stdin, with the format { "params": { ... }, "source": { ... } }
# As mentioned here: https://concourse-ci.org/implementing-resource-types.html#resource-out
# But will contain values you provide as part of the step.
payload="$(cat <&0)"

# List of all variables expected
params=""
variables=( "text" "username" "message" "webhook-url" )
for field in "${variables[@]}"; do
    # Grab the field using jq
    raw=`jq ".params.\"$field\"" <<< "$payload"`
    # Interpolate any bash variables
    value=`eval "echo $raw"`

    # echo "$field: $value" # debugging~

    # Build the argument/param list for the discord.sh call
    if [[ "$value" != "null" ]] ; then
        params="${params} --${field}=\"${value}\""
    fi
done

# Execute the command
eval "/discord.sh/discord.sh $params"

# Example:
# /discord.sh/discord.sh --username "CI/CD" --text="$text"

# Is this required? Probably..
jq -n "{version: {}}" >&3
